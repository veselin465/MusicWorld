@model MusicWorld.Models.Catalogs.CatalogsDetailViewModel

@{
    ViewData["Title"] = "Detail catalog";
}

<h1>Catalog information</h1>

<hr />

<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CatalogInformation.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CatalogInformation.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CatalogInformation.MyUserName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CatalogInformation.MyUserName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CatalogInformation.Descritpion)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CatalogInformation.Descritpion)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.CatalogInformation.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<br />
<br />

<h1>This catalog's songs</h1>

<table class="table text-center">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Duration
            </th>
            <th>
                From album
            </th>
            <th>
                Created by
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model.CurrentCatalogSongs)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Duration)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AlbumName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PerformerName)
                </td>
                <td>
                    <a asp-controller="Catalog" asp-action="RemoveSongFromCatalog" asp-route-catalogId="@Model.CatalogInformation.Id" asp-route-songId="@item.Id">remove song from catalog</a>
                </td>
            </tr>
        }


    </tbody>
</table>

<br />
<br />
<h1>Add other songs to this catalog</h1>

<table class="table text-center">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Duration
            </th>
            <th>
                From album
            </th>
            <th>
                Created by
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model.NotAddedSongs)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Duration)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AlbumName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PerformerName)
                </td>
                <td>
                    <a asp-controller="Catalog" asp-action="AddSongToCatalog" asp-route-catalogId="@Model.CatalogInformation.Id" asp-route-songId="@item.Id">add song to catalog</a>
                </td>
            </tr>
        }


    </tbody>
</table>


